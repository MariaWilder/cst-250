# main source file

.org 0x10000000

###############
# Team MIPSter
# 03.03.13
# Parse (Verify)
###############

# Parse input string for errors
# 
# Required Format 
#[s][int][.][frac]
# [2D][30-39][2E][30-39]

# sample input array
################### SETUP ######################

# pointer to the start of a block of array a
li $a0, 0x10000000

# initialize mem. block
li $t0, 0x31 # a[4]
sw $t0, 0($a0)
li $t0, 0x39 # a[8]
sw $t0, 4($a0)
li $t0, 0x33 # a[12]
sw $t0, 8($a0)
li $t0, 0x2E # "." a[16]
sw $t0, 12($a0)

# pointer to the start of block of array b
li $a1, 0x10100000 

li $t0, 0x34 # b[0]
sw $t0, 0($a1)
li $t0, 0x35 # b[4]
sw $t0, 4($a1)

# length of a
li $a2, 5

# length of b 
li $a3, 2

############################################
################ PROGRAM ###################

parse_int:
move $s0, $a0 #address of int array
li $s2, 0 # counter

lw $s1, 0($s0)
li $t0, 0x2D
bne $s1, $t0, parse_int_loop
nop
addiu $s0, $s0, 0x4 # inc. offset
addiu $s2, $s2, 1 # inc. counter
lw $s1, 0($s0) #get next byte

parse_int_loop:
 # exit conditions:
 li $t0, 0x2E
 beq $s1, $t0, parse_frac
 nop
 beq $s2, $a2, parse_frac
 nop
 
 # should be decimal ascii...
 li $t0, 0x30
 slt $t1, $s1, $t0
 li $t0, 0x39
 slt $t2, $t0, $s1
 li $t0, 1
 beq $t1, $t0, error
 nop
 beq $t2, $t0, error
 nop
 
 addiu $s0, $s0, 0x4 # inc. offset
 addiu $s2, $s2, 1 # inc. counter
 lw $s1, 0($s0) #get next byte
j parse_int_loop
nop


parse_frac:
move $s0, $a1 #address of frac array
li $s3, 0 # counter
lw $s1, 0($s0) #get next byte

parse_frac_loop:
 # exit conditions:
 beq $s3, $a3, exit
 nop
 
 # should be decimal ascii...
 li $t0, 0x30
 slt $t1, $s1, $t0
 li $t0, 0x39
 slt $t2, $t0, $s1
 li $t0, 1
 beq $t1, $t0, error
 nop
 beq $t2, $t0, error
 nop
 
 addiu $s0, $s0, 0x4 # inc. offset
 addiu $s3, $s3, 1 # inc. counter
 lw $s1, 0($s0) #get next byte
j parse_frac_loop
nop

error:
 li $v0, 1
 nop

exit:
 nop

################## END #####################



